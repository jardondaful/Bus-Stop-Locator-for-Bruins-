import arcpy
from arcpy import env
import os

# Set environment settings
folder_path = r"C:\Users\julyquintero\Downloads\Find_Closest_Facility\MyProject1New"
ProjectGDB = os.path.join(folder_path, "MyProject1.gdb")
env.workspace = ProjectGDB
env.overwriteOutput = True


DirectionPoints = os.path.join(ProjectGDB, "ClosestFacilitySolver15zctac", "ClosestFacilitySolver15zctac_DirectionPoints")
    #the CF name was autogenerated so had to open pro first to check name
    #work on deleting the last values to make code run independent of specific name
StopsOnStreets = os.path.join(ProjectGDB, "StopsOnStreets") 

# Create a list to store the non-null FacilityID values
facility_ids = []

with arcpy.da.SearchCursor(DirectionPoints, ["ObjectID", "DisplayText", "FacilityID"]) as cursor:
    print("Directions:")
    for row in cursor:
        object_id = row[0]
        display_text = row[1]
        facility_id = row[2]
        print(display_text)
        
        if facility_id is not None: #We can comment this out
            print(f"Incident ID: {facility_id}\n") #We can comment this out

# Open a search cursor to iterate over the rows in the input table
with arcpy.da.SearchCursor(DirectionPoints, ["FacilityID"]) as cursor:
    for row in cursor:
        facility_id = row[0]
        if facility_id is not None:
            facility_ids.append(facility_id)

# Check if there are at least two facility IDs in the list
if len(facility_ids) >= 2:
    # Create a feature layer to perform the selection
    arcpy.MakeFeatureLayer_management(StopsOnStreets, "StopsLayer")

    # Select features based on the facility IDs
    where_clause = "OBJECTID = {} OR OBJECTID = {}".format(facility_ids[0], facility_ids[1])
    arcpy.SelectLayerByAttribute_management("StopsLayer", "NEW_SELECTION", where_clause)

    # Export the selected features to a shapefile
    arcpy.conversion.ExportFeatures("StopsLayer", os.path.join(folder_path, "BusPoints.shp")) #can rename shp file, use this for route input

    print("Export completed successfully.")
else:
    print("Insufficient facility IDs to perform the export.")

print("Done.")

